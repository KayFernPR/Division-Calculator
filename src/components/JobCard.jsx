const JobCard = ({ job, onDelete, formatDate }) => {
  const formatCurrency = (value) => {
    return new Intl.NumberFormat('en-US', {
      style: 'currency',
      currency: 'USD'
    }).format(value)
  }

  const formatPercentage = (value) => {
    return `${value.toFixed(2)}%`
  }

  const getValueClass = (value) => {
    if (value > 0) return 'positive'
    if (value < 0) return 'negative'
    return 'neutral'
  }

  const handlePrint = () => {
    // Create a new window for printing
    const printWindow = window.open('', '_blank')
    
    printWindow.document.write(`
      <!DOCTYPE html>
      <html>
        <head>
          <title>Job Report - ${job.jobName}</title>
          <style>
            body {
              font-family: Arial, sans-serif;
              margin: 20px;
              line-height: 1.6;
            }
            .header {
              text-align: center;
              border-bottom: 2px solid #333;
              padding-bottom: 20px;
              margin-bottom: 30px;
            }
            .job-details {
              margin-bottom: 30px;
            }
            .results {
              background: #f8f9fa;
              padding: 20px;
              border-radius: 8px;
              margin-bottom: 30px;
            }
            .result-row {
              display: flex;
              justify-content: space-between;
              margin-bottom: 10px;
              padding: 5px 0;
              border-bottom: 1px solid #ddd;
            }
            .result-row:last-child {
              border-bottom: none;
            }
            .label {
              font-weight: bold;
            }
            .value {
              font-family: monospace;
              font-weight: bold;
            }
            .positive { color: #22c55e; }
            .negative { color: #ef4444; }
            .neutral { color: #6b7280; }
            .footer {
              margin-top: 40px;
              text-align: center;
              font-size: 12px;
              color: #666;
            }
            @media print {
              body { margin: 0; }
              .no-print { display: none; }
            }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>üí∞ Profitability Report</h1>
            <h2>${job.jobName}</h2>
            <p>Generated on ${formatDate(job.timestamp)}</p>
          </div>
          
          <div class="job-details">
            <h3>Job Details</h3>
            <div class="result-row">
              <span class="label">Job Name:</span>
              <span class="value">${job.jobName}</span>
            </div>
            <div class="result-row">
              <span class="label">Total Price:</span>
              <span class="value">${formatCurrency(job.totalPrice)}</span>
            </div>
            <div class="result-row">
              <span class="label">Total Cost:</span>
              <span class="value">${formatCurrency(job.totalCost)}</span>
            </div>
            ${job.targetMargin ? `
            <div class="result-row">
              <span class="label">Target Margin:</span>
              <span class="value">${formatPercentage(job.targetMargin)}</span>
            </div>
            ` : ''}
          </div>
          
          <div class="results">
            <h3>Profitability Results</h3>
            <div class="result-row">
              <span class="label">Gross Profit:</span>
              <span class="value ${getValueClass(job.grossProfit)}">${formatCurrency(job.grossProfit)}</span>
            </div>
            <div class="result-row">
              <span class="label">Gross Margin:</span>
              <span class="value ${getValueClass(job.grossMargin)}">${formatPercentage(job.grossMargin)}</span>
            </div>
            ${job.targetMargin ? `
            <div class="result-row">
              <span class="label">Margin Difference:</span>
              <span class="value ${getValueClass(job.marginDifference)}">${formatPercentage(job.marginDifference)}</span>
            </div>
            ` : ''}
          </div>
          
          <div class="footer">
            <p>Generated by Profitability Calculator</p>
            <p>¬© 2024 All rights reserved</p>
          </div>
        </body>
      </html>
    `)
    
    printWindow.document.close()
    printWindow.focus()
    
    // Wait for content to load then print
    setTimeout(() => {
      printWindow.print()
      printWindow.close()
    }, 500)
  }

  return (
    <div className="card animate-fade-in">
      {/* Header */}
      <div className="flex justify-between items-start mb-4">
        <div>
          <h3 className="text-lg font-bold text-gray-900 dark:text-white">
            {job.jobName}
          </h3>
          <p className="text-sm text-gray-500 dark:text-gray-400">
            {formatDate(job.timestamp)}
          </p>
        </div>
        <div className="flex space-x-2">
          <button
            onClick={handlePrint}
            className="btn btn-success text-sm"
            title="Print to PDF"
          >
            üñ®Ô∏è Print
          </button>
          <button
            onClick={onDelete}
            className="btn btn-danger text-sm"
            title="Delete job"
          >
            üóëÔ∏è
          </button>
        </div>
      </div>

      {/* Job Details */}
      <div className="space-y-2 mb-4">
        <div className="flex justify-between text-sm">
          <span className="text-gray-600 dark:text-gray-400">Total Price:</span>
          <span className="font-mono font-semibold">{formatCurrency(job.totalPrice)}</span>
        </div>
        <div className="flex justify-between text-sm">
          <span className="text-gray-600 dark:text-gray-400">Total Cost:</span>
          <span className="font-mono font-semibold">{formatCurrency(job.totalCost)}</span>
        </div>
        {job.targetMargin && (
          <div className="flex justify-between text-sm">
            <span className="text-gray-600 dark:text-gray-400">Target Margin:</span>
            <span className="font-mono font-semibold">{formatPercentage(job.targetMargin)}</span>
          </div>
        )}
      </div>

      {/* Results */}
      <div className="border-t border-gray-200 dark:border-gray-700 pt-4">
        <h4 className="font-semibold text-gray-900 dark:text-white mb-3">Results</h4>
        <div className="space-y-2">
          <div className="flex justify-between">
            <span className="text-sm text-gray-600 dark:text-gray-400">Gross Profit:</span>
            <span className={`text-sm font-mono font-semibold ${getValueClass(job.grossProfit)}`}>
              {formatCurrency(job.grossProfit)}
            </span>
          </div>
          <div className="flex justify-between">
            <span className="text-sm text-gray-600 dark:text-gray-400">Gross Margin:</span>
            <span className={`text-sm font-mono font-semibold ${getValueClass(job.grossMargin)}`}>
              {formatPercentage(job.grossMargin)}
            </span>
          </div>
          {job.targetMargin && (
            <div className="flex justify-between">
              <span className="text-sm text-gray-600 dark:text-gray-400">Margin Difference:</span>
              <span className={`text-sm font-mono font-semibold ${getValueClass(job.marginDifference)}`}>
                {formatPercentage(job.marginDifference)}
              </span>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}

export default JobCard 